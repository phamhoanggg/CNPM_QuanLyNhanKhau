/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.quanlynhankhau.ui;

import com.mycompany.quanlynhankhau.Helpers.DatabaseHelper;
import com.mycompany.quanlynhankhau.Thongtin.NhanKhau;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author minhd
 */
public class FilterForm extends javax.swing.JFrame {
    HomepageForm hpform;
    /**
     * Creates new form FilterForm
     */
    public FilterForm() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    public FilterForm(HomepageForm hpform) {
        initComponents();
        this.hpform = hpform;
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filter_gender_groupbtn = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        filter_cccd_text = new javax.swing.JTextField();
        filter_name_text = new javax.swing.JTextField();
        filter_isMale = new javax.swing.JRadioButton();
        filter_isFemale = new javax.swing.JRadioButton();
        FilterBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("CCCD");

        jLabel2.setText("Họ tên");

        jLabel3.setText("Giới tính");

        filter_gender_groupbtn.add(filter_isMale);
        filter_isMale.setText("Nam");

        filter_gender_groupbtn.add(filter_isFemale);
        filter_isFemale.setText("Nữ");

        FilterBtn.setText("Lọc");
        FilterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(filter_cccd_text)
                    .addComponent(filter_name_text, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(filter_isMale)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FilterBtn)
                            .addComponent(filter_isFemale))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(filter_cccd_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(filter_name_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(filter_isMale)
                    .addComponent(filter_isFemale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(FilterBtn)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FilterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterBtnActionPerformed
        List<NhanKhau> nkList = new ArrayList<>();
        try{
            Connection conn = DatabaseHelper.ConnectDB();
            PreparedStatement prepSt;
            String sql = "";
            
            if (!filter_cccd_text.getText().trim().equals("") && !filter_name_text.getText().trim().equals("") && (filter_isMale.isSelected() || filter_isFemale.isSelected())){
                String gender = filter_isMale.isSelected() ? "Nam" : "Nữ";
                sql = "SELECT * FROM `nhankhau` WHERE `hoten` = ? AND `CCCD` = ? AND `gioitinh` = ?";
                
                prepSt = conn.prepareStatement(sql);
                prepSt.setString(1, filter_name_text.getText());
                prepSt.setString(2, filter_cccd_text.getText());
                prepSt.setString(3, gender);
                
                ResultSet rs = prepSt.executeQuery();
                while(rs.next()){
                    NhanKhau nk = new NhanKhau(rs.getString("idnhankhau"), rs.getString("idhokhau"),
                                            rs.getString("CCCD"), rs.getString("hoten"), rs.getString("ngaysinh"),
                                            rs.getString("gioitinh"), rs.getString("quanhevoichuho"), rs.getString("quequan"),
                                            rs.getString("dantoc"), rs.getString("nghenghiep"), rs.getString("diachithuongtru"),
                                            rs.getString("ghichu"));

                    nkList.add(nk);
                }
            }else if (!filter_cccd_text.getText().trim().equals("") && !filter_name_text.getText().trim().equals("") && (!filter_isMale.isSelected() && !filter_isFemale.isSelected())){
                sql = "SELECT * FROM `nhankhau` WHERE `hoten` = ? AND `CCCD` = ?";
                
                prepSt = conn.prepareStatement(sql);
                prepSt.setString(1, filter_name_text.getText());
                prepSt.setString(2, filter_cccd_text.getText());
                
                ResultSet rs = prepSt.executeQuery();
                while(rs.next()){
                    NhanKhau nk = new NhanKhau(rs.getString("idnhankhau"), rs.getString("idhokhau"),
                                            rs.getString("CCCD"), rs.getString("hoten"), rs.getString("ngaysinh"),
                                            rs.getString("gioitinh"), rs.getString("quanhevoichuho"), rs.getString("quequan"),
                                            rs.getString("dantoc"), rs.getString("nghenghiep"), rs.getString("diachithuongtru"),
                                            rs.getString("ghichu"));

                    nkList.add(nk);
                }
            }else if (!filter_cccd_text.getText().trim().equals("") && filter_name_text.getText().trim().equals("") && (filter_isMale.isSelected() || filter_isFemale.isSelected())){
                String gender = filter_isMale.isSelected() ? "Nam" : "Nữ";
                sql = "SELECT * FROM `nhankhau` WHERE `hoten` = ? AND `gioitinh` = ?";
                
                prepSt = conn.prepareStatement(sql);
                prepSt.setString(1, filter_name_text.getText());
                prepSt.setString(2, gender);
                
                ResultSet rs = prepSt.executeQuery();
                while(rs.next()){
                    NhanKhau nk = new NhanKhau(rs.getString("idnhankhau"), rs.getString("idhokhau"),
                                            rs.getString("CCCD"), rs.getString("hoten"), rs.getString("ngaysinh"),
                                            rs.getString("gioitinh"), rs.getString("quanhevoichuho"), rs.getString("quequan"),
                                            rs.getString("dantoc"), rs.getString("nghenghiep"), rs.getString("diachithuongtru"),
                                            rs.getString("ghichu"));

                    nkList.add(nk);
                }
            }else if (filter_cccd_text.getText().trim().equals("") && !filter_name_text.getText().trim().equals("") && (filter_isMale.isSelected() || filter_isFemale.isSelected())){
                String gender = filter_isMale.isSelected() ? "Nam" : "Nữ";
                sql = "SELECT * FROM `nhankhau` WHERE `CCCD` = ? AND `gioitinh` = ?";
                
                prepSt = conn.prepareStatement(sql);
                prepSt.setString(1, filter_cccd_text.getText());
                prepSt.setString(2, gender);
                
                ResultSet rs = prepSt.executeQuery();
                while(rs.next()){
                    NhanKhau nk = new NhanKhau(rs.getString("idnhankhau"), rs.getString("idhokhau"),
                                            rs.getString("CCCD"), rs.getString("hoten"), rs.getString("ngaysinh"),
                                            rs.getString("gioitinh"), rs.getString("quanhevoichuho"), rs.getString("quequan"),
                                            rs.getString("dantoc"), rs.getString("nghenghiep"), rs.getString("diachithuongtru"),
                                            rs.getString("ghichu"));

                    nkList.add(nk);
                }
            }else if (filter_cccd_text.getText().trim().equals("") && filter_name_text.getText().trim().equals("") && (filter_isMale.isSelected() || filter_isFemale.isSelected())){
                String gender = filter_isMale.isSelected() ? "Nam" : "Nữ";
                sql = "SELECT * FROM `nhankhau` WHERE `gioitinh` = ?";
                
                prepSt = conn.prepareStatement(sql);
                prepSt.setString(1, gender);
                
                ResultSet rs = prepSt.executeQuery();
                while(rs.next()){
                    NhanKhau nk = new NhanKhau(rs.getString("idnhankhau"), rs.getString("idhokhau"),
                                            rs.getString("CCCD"), rs.getString("hoten"), rs.getString("ngaysinh"),
                                            rs.getString("gioitinh"), rs.getString("quanhevoichuho"), rs.getString("quequan"),
                                            rs.getString("dantoc"), rs.getString("nghenghiep"), rs.getString("diachithuongtru"),
                                            rs.getString("ghichu"));

                    nkList.add(nk);
                }
            }else if (!filter_cccd_text.getText().trim().equals("") && filter_name_text.getText().trim().equals("") && (!filter_isMale.isSelected() && !filter_isFemale.isSelected())){
                sql = "SELECT * FROM `nhankhau` WHERE `CCCD` = ?";
                
                prepSt = conn.prepareStatement(sql);
                prepSt.setString(1, filter_cccd_text.getText());
                
                ResultSet rs = prepSt.executeQuery();
                while(rs.next()){
                    NhanKhau nk = new NhanKhau(rs.getString("idnhankhau"), rs.getString("idhokhau"),
                                            rs.getString("CCCD"), rs.getString("hoten"), rs.getString("ngaysinh"),
                                            rs.getString("gioitinh"), rs.getString("quanhevoichuho"), rs.getString("quequan"),
                                            rs.getString("dantoc"), rs.getString("nghenghiep"), rs.getString("diachithuongtru"),
                                            rs.getString("ghichu"));

                    nkList.add(nk);
                }
            }else if (filter_cccd_text.getText().trim().equals("") && !filter_name_text.getText().trim().equals("") && !filter_isMale.isSelected() && !filter_isMale.isSelected()){
                sql = "SELECT * FROM `nhankhau` WHERE `hoten` = ?";
                
                prepSt = conn.prepareStatement(sql);
                prepSt.setString(1, filter_name_text.getText());
                
                ResultSet rs = prepSt.executeQuery();
                while(rs.next()){
                    NhanKhau nk = new NhanKhau(rs.getString("idnhankhau"), rs.getString("idhokhau"),
                                            rs.getString("CCCD"), rs.getString("hoten"), rs.getString("ngaysinh"),
                                            rs.getString("gioitinh"), rs.getString("quanhevoichuho"), rs.getString("quequan"),
                                            rs.getString("dantoc"), rs.getString("nghenghiep"), rs.getString("diachithuongtru"),
                                            rs.getString("ghichu"));

                    nkList.add(nk);
                }
            }
        }catch (Exception e){

        }
        
        if (!nkList.isEmpty()){
            Collections.sort(nkList, (d1, d2) -> {
                return Integer.parseInt(d1.getIdNK()) - Integer.parseInt(d2.getIdNK());
            });
        }
        
        // Display in table
        
        try{
            DefaultTableModel model = (DefaultTableModel)hpform.GetNKTable().getModel();
            for (int i = model.getRowCount()-1; i >= 0; i--){
                model.removeRow(i);
            }

            Object[] row = new Object[8];
            for (int i = 0; i < nkList.size(); i++){
                row[0] = nkList.get(i).getIdNK();
                row[1] = nkList.get(i).getIdHK();
                row[2] = nkList.get(i).getHoTen();
                row[3] = nkList.get(i).getCccd();
                row[4] = nkList.get(i).getNgaySinh();
                row[5] = nkList.get(i).getGioiTinh();
                row[6] = nkList.get(i).getQuanHeVoiChuHo();
                row[7] = nkList.get(i).getNgheNghiep();

                model.addRow(row);
            }
        }catch(Exception e){

        }
        this.dispose();
    }//GEN-LAST:event_FilterBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FilterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FilterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FilterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FilterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FilterForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FilterBtn;
    private javax.swing.JTextField filter_cccd_text;
    private javax.swing.ButtonGroup filter_gender_groupbtn;
    private javax.swing.JRadioButton filter_isFemale;
    private javax.swing.JRadioButton filter_isMale;
    private javax.swing.JTextField filter_name_text;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
